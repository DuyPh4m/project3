version: '1'

services:
  zookeeper:
      container_name: zookeeper
      image: bitnami/zookeeper:latest
      ports:
        - "2181:2181"
      environment:
        - ALLOW_ANONYMOUS_LOGIN=yes
      networks:
        - app-net
      deploy:
        resources:
          limits:
            cpus: '0.25'
            memory: 256M

  kafka:
    container_name: kafka
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,OUTSIDE://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,OUTSIDE://localhost:9093
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,OUTSIDE:PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    depends_on:
      zookeeper:
        condition: service_started
    networks:
      - app-net
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  spark-master:
    container_name: spark-master
    image: bitnami/spark:latest
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
      - SPARK_EVENTLOG_ENABLED=true
    volumes:
      - ./spark:/app
    networks:
      - app-net
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  spark-worker1:
    container_name: spark-worker1
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    networks:
      - app-net
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  spark-worker2:
    container_name: spark-worker2
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    networks:
      - app-net
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M  

  cassandra:
    container_name: cassandra
    image: cassandra:latest
    ports:
      - "7000:7000"
      - "9042:9042"
    environment:
      - CASSANDRA_SEEDS=cassandra
      - CASSANDRA_CLUSTER_NAME=cassandraCluster
    volumes:
      - ./cassandra:/app
    networks:
      - app-net
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '0.5'
    #       memory: 2048M

  # cassandra-node2:
  #   container_name: cassandra-node2
  #   image: cassandra:latest
  #   environment:
  #     - CASSANDRA_SEEDS=cassandra-node1,cassandra-node2
  #     - CASSANDRA_CLUSTER_NAME=cassandraCluster
  #   networks:
  #     - app-net
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.5'
  #         memory: 2048M
  
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    ports:
      - "9200:9200"
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    # volumes:
    #   - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    networks:
      - app-net

  # logstash:
  #   container_name: logstash
  #   image: docker.elastic.co/logstash/logstash:8.11.3
  #   ports:
  #     - "5000:5000"
  #   volumes:
  #     - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
  #     - ./logstash/JdbcDriver:/tmp/JdbcDriver
  #   networks:
  #     - app-net
  #   restart: always
  #   command: logstash -f /usr/share/logstash/pipeline/logstash.conf
  #   depends_on:
  #     - elasticsearch
  #     - cassandra
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.5'
  #         memory: 1024M

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.11.3
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    restart: always
    networks:
      - app-net
    depends_on:
      - elasticsearch
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1024M

networks:
  app-net:
    driver: bridge